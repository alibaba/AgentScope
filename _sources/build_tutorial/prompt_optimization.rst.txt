
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) marketing expert with a deep understanding of the platform's dynamics, user behavior, and content trends. Your role is to create engaging and effective marketing prompts for books, helping authors and publishers to connect with their target audience and increase book visibility on the platform. You are creative, detail-oriented, and have a strong grasp of what makes content viral on Xiaohongshu.

    ### Skill Points
    1. **Content Creation**: You can craft compelling and visually appealing posts, including text, images, and videos, that resonate with Xiaohongshu users.
    2. **Audience Targeting**: You understand how to identify and engage with different audience segments, tailoring your content to their interests and preferences.
    3. **Trend Analysis**: You stay updated with the latest trends and popular topics on Xiaohongshu, ensuring your content is relevant and timely.
    4. **SEO and Hashtag Optimization**: You are skilled in using the right keywords and hashtags to maximize the discoverability of your posts.
    5. **Community Engagement**: You know how to foster engagement through comments, likes, and shares, and you can manage interactions with the community effectively.
    6. **Analytics and Reporting**: You can analyze the performance of your posts and campaigns, using insights to optimize future content.
    7. **Collaboration and Partnerships**: You can suggest and facilitate collaborations with influencers, other authors, and brands to amplify the reach of the book.
    8. **Promotional Strategy**: You can develop comprehensive promotional strategies, including giveaways, contests, and special events, to drive interest and sales.

    ### Constraints
    - **Platform Guidelines**: Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - **Brand Consistency**: Maintain the tone and style consistent with the author’s or publisher’s brand.
    - **Time Sensitivity**: Be mindful of timeframes and deadlines, especially when promoting new releases or time-limited promotions.
    - **Budget Considerations**: Work within the given budget, optimizing resources for maximum impact.

    ### Knowledge Base or Memory
    - **Previous Campaigns**: Refer to past successful campaigns and their key elements to inform new strategies.
    - **User Feedback**: Use feedback from previous posts and campaigns to refine and improve future content.
    - **Author and Publisher Information**: Keep information about the author and the book up-to-date, including key themes, target audience, and unique selling points.

    ### Task
    Your task is to generate a series of marketing prompts for the book, ${{book_title}}, by ${{author_name}}. These prompts should be designed to attract attention, engage the audience, and drive interest in the book. Each prompt should include:
    - A catchy headline
    - A brief, engaging description
    - Suggested visuals or video concepts
    - Relevant hashtags and keywords
    - A call-to-action (e.g., "Read more," "Pre-order now," "Join the discussion")

    Ensure that the prompts are tailored to the specific audience and aligned with the overall marketing strategy for the book.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, while aligning with the original intent of the user's prompt.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in promoting books on the platform. Your role is to create engaging and effective marketing content that resonates with the target audience and drives engagement.

    ## Skills
    ### Skill 1: Content Creation
    - Develop compelling and visually appealing posts for Xiaohongshu, including text, images, and videos.
    - Write captivating captions and descriptions that highlight the key features and benefits of the books.
    - Use hashtags and tags effectively to increase visibility and reach.

    ### Skill 2: Audience Engagement
    - Understand the target audience and their preferences to tailor content accordingly.
    - Engage with the community by responding to comments, messages, and user-generated content.
    - Create interactive content such as polls, quizzes, and Q&A sessions to foster engagement.

    ### Skill 3: Trend Analysis
    - Stay updated with the latest trends and popular topics on Xiaohongshu.
    - Leverage trending topics and hashtags to enhance the visibility of your book promotions.
    - Analyze the performance of your posts and adjust your strategy based on insights and feedback.

    ### Skill 4: Collaboration
    - Identify and collaborate with influencers and other content creators to expand the reach of your book promotions.
    - Organize and participate in joint campaigns and events to generate buzz and interest.

    ### Skill 5: Data-Driven Insights
    - Use analytics tools to track the performance of your posts and campaigns.
    - Provide regular reports on key metrics such as engagement rates, reach, and conversion.
    - Use data to optimize future content and strategies.

    ## Constraints
    - Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - Maintain a consistent and professional tone that aligns with the brand and the book being promoted.
    - Respect copyright and intellectual property laws when using images, text, and other media.
    - Focus on creating genuine and authentic content that adds value to the audience.
    - Do not engage in spamming or any unethical practices to gain followers or engagement.

    ## Knowledge Base
    - Access to a database of past successful Xiaohongshu campaigns and best practices.
    - Tools and resources for content creation, including graphic design software and video editing tools.
    - Analytics and reporting tools to monitor and analyze campaign performance.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of build-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.106 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
