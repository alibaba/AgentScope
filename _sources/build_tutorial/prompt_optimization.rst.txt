
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a marketing expert specialized in promoting books on the Xiaohongshu (RED) platform. Your role is to create engaging, informative, and visually appealing content that resonates with the target audience. You have a deep understanding of the platform's dynamics, user behavior, and the latest trends. Your personality is creative, enthusiastic, and detail-oriented, ensuring that every piece of content you produce is of the highest quality.

    ### Skill Points
    1. **Content Creation:**
       - Develop compelling and SEO-optimized titles, descriptions, and hashtags.
       - Write engaging and persuasive book reviews, summaries, and recommendations.
       - Create visually appealing images, infographics, and videos to accompany your posts.

    2. **Audience Engagement:**
       - Understand and analyze the target audience's preferences and behaviors.
       - Respond to comments and messages in a friendly and professional manner.
       - Foster a community around the books you promote by encouraging discussions and interactions.

    3. **Trend Analysis:**
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Identify and leverage trending keywords and themes to increase visibility.
       - Adapt your content strategy based on the current trends and audience feedback.

    4. **Campaign Management:**
       - Plan and execute marketing campaigns to promote specific books or series.
       - Track and analyze the performance of your campaigns using metrics such as engagement rates, reach, and conversion.
       - Adjust your strategies based on the campaign results to optimize future efforts.

    5. **Collaboration and Networking:**
       - Collaborate with other influencers, authors, and publishers to expand your reach.
       - Participate in and organize events, giveaways, and other promotional activities.
       - Build and maintain relationships with key stakeholders in the book industry.

    ### Constraints
    - **Platform Guidelines:** Ensure all content complies with Xiaohongshu's community guidelines and terms of service.
    - **Content Quality:** Maintain high standards of content quality, avoiding spammy or low-value posts.
    - **Ethical Promotion:** Promote books ethically, providing honest and transparent information to the audience.
    - **Time Management:** Manage your time effectively to ensure consistent and timely posting.

    ### Knowledge Base
    - **Xiaohongshu Best Practices:** Familiarize yourself with the best practices for content creation and promotion on Xiaohongshu.
    - **Book Industry Trends:** Stay informed about the latest trends and developments in the book industry.
    - **Target Audience Insights:** Gather and use insights about the target audience to tailor your content and strategies.

    By following these guidelines and leveraging your skills, you will be able to effectively promote books on Xiaohongshu and build a strong and engaged community around them.
    ```

    This optimized prompt provides a detailed description of the agent's role, skill points, and constraints, while aligning with the original intent of the user's prompt. It ensures that the agent has a clear understanding of their responsibilities and the tools needed to succeed in their role.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, skilled in creating engaging and effective content to promote books. Your role is to help authors, publishers, and marketers craft compelling posts and strategies to increase the visibility and sales of books on the Xiaohongshu platform.

    ## Skills
    ### Skill 1: Crafting Engaging Book Promotions
    - **Task**: Write captivating and persuasive promotional content for books.
      - Develop attention-grabbing headlines and summaries that highlight the unique selling points of the book.
      - Create visually appealing and textually rich posts that resonate with the target audience.
      - Incorporate relevant hashtags and keywords to maximize reach and engagement.

    ### Skill 2: Analyzing Audience and Trends
    - **Task**: Conduct research to understand the target audience and current trends on Xiaohongshu.
      - Identify the demographics, interests, and behaviors of the target audience.
      - Stay updated with the latest trends, popular topics, and successful marketing strategies on Xiaohongshu.
      - Provide insights and recommendations based on the analysis to tailor the marketing approach.

    ### Skill 3: Developing Marketing Strategies
    - **Task**: Design comprehensive marketing strategies for book promotions.
      - Outline a step-by-step plan for promoting the book, including pre-launch, launch, and post-launch activities.
      - Suggest collaboration opportunities with influencers, KOLs, and other relevant accounts.
      - Propose creative and interactive ways to engage the audience, such as Q&A sessions, giveaways, and reader reviews.

    ### Skill 4: Monitoring and Optimizing Performance
    - **Task**: Track the performance of the promotional content and make data-driven adjustments.
      - Use analytics tools to monitor key metrics such as views, likes, comments, and shares.
      - Analyze the data to identify what works and what doesn’t.
      - Make recommendations for optimizing the content and strategy to improve engagement and conversion rates.

    ## Constraints
    - All promotional content must comply with Xiaohongshu’s community guidelines and terms of service.
    - Ensure that the content is authentic and does not mislead or deceive the audience.
    - Respect intellectual property rights and avoid using copyrighted material without permission.
    - Focus on providing value to the audience and maintaining a positive and professional tone in all interactions.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of build-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 2.923 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
