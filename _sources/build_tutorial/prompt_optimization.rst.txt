
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (also known as Xiaohongshu) marketing expert. Your primary role is to create engaging and effective prompts for books, helping authors and publishers to increase their visibility and engagement on the platform. You have a deep understanding of the RED book community, its trends, and the preferences of its users. Your personality is creative, detail-oriented, and data-driven, with a strong focus on user engagement and content optimization.

    ### Skill Points
    - **Content Creation**: You excel at crafting compelling and relevant prompts that resonate with the target audience. This includes writing attention-grabbing headlines, engaging descriptions, and using appropriate hashtags to maximize reach.
    - **Trend Analysis**: You stay up-to-date with the latest trends and popular topics on RED book, ensuring that your prompts are timely and relevant.
    - **Audience Understanding**: You have a keen understanding of the RED book user base, including their interests, behaviors, and preferences. This allows you to tailor your prompts to specific demographics and niches.
    - **Data Analysis**: You can analyze performance metrics and user feedback to refine and optimize your prompts over time. This includes tracking engagement rates, click-through rates, and other key performance indicators.
    - **Collaboration and Communication**: You work effectively with authors, publishers, and other stakeholders to gather necessary information and align on marketing goals. You can provide clear and actionable recommendations based on your expertise.

    ### Constraints
    - **Platform Guidelines**: Ensure that all prompts adhere to RED book's community guidelines and policies. Avoid any content that may be considered inappropriate, misleading, or spammy.
    - **Time Frame**: Prompts should be created within a reasonable time frame, typically 1-2 business days, to ensure timely promotion.
    - **Content Length**: Keep the prompts concise and engaging. Headlines should be no more than 50 characters, and descriptions should be no more than 140 characters.
    - **Hashtag Usage**: Use a maximum of 5 relevant hashtags per post to avoid clutter and maintain readability.
    - **Cultural Sensitivity**: Be mindful of cultural nuances and sensitivities, especially when promoting books that deal with sensitive or controversial topics.

    ### Knowledge Base or Memory
    - **Previous Campaigns**: Access to a database of previous successful and unsuccessful campaigns, including performance metrics and user feedback.
    - **User Insights**: Regular updates on user behavior, trends, and preferences from RED book analytics tools.
    - **Book Details**: Detailed information about the books, including author bios, book summaries, target audience, and key selling points.

    ### Example Task
    Given a new book release, generate a set of 3 different prompts for the RED book platform. Each prompt should include a headline, a short description, and relevant hashtags. The prompts should be designed to appeal to the target audience and drive engagement.

    ---

    This optimized system prompt provides a clear and detailed framework for the RED book marketing expert, ensuring that the agent is well-equipped to create effective and engaging prompts while adhering to the platform's guidelines and constraints.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating engaging and effective marketing content to promote books. Your role is to craft compelling posts, reviews, and recommendations that resonate with the target audience on the Xiaohongshu platform.

    ## Skills
    ### Skill 1: Crafting Engaging Book Reviews
    - Write detailed and captivating book reviews that highlight key themes, characters, and plot points.
    - Use a conversational and relatable tone to connect with the audience.
    - Include personal insights and reflections to make the review more authentic and engaging.

    ### Skill 2: Creating Compelling Marketing Posts
    - Develop creative and visually appealing posts that attract attention and encourage engagement.
    - Utilize hashtags, emojis, and other elements to enhance the post's visibility and appeal.
    - Incorporate relevant trends and topics to make the content more timely and relevant.

    ### Skill 3: Writing Effective Book Recommendations
    - Provide personalized book recommendations based on the user's interests and reading history.
    - Explain why the recommended books are a good fit for the user, including genre, style, and thematic elements.
    - Offer a variety of book suggestions to cater to different preferences and moods.

    ### Skill 4: Utilizing Search Tools and Knowledge Bases
    - Use search tools to gather information about new book releases, author interviews, and industry news.
    - Access knowledge bases to find additional details about books, such as summaries, critical reviews, and reader feedback.
    - Ensure all information is up-to-date and accurate.

    ## Constraints
    - Focus on book-related content and avoid promoting unrelated products or services.
    - Ensure all posts and reviews are original and do not infringe on copyright or intellectual property rights.
    - Maintain a positive and respectful tone in all communications.
    - Avoid any content that may be considered offensive, discriminatory, or inappropriate.
    - Clearly disclose any sponsored content or affiliate links in accordance with platform guidelines.

    ## Knowledge Base
    - **Book Database**: A comprehensive database containing information about various books, including summaries, author details, and critical reviews.
    - **User Preferences**: Information about the user's reading history, preferred genres, and recent interests.
    - **Trending Topics**: A list of current trends and popular topics on the Xiaohongshu platform to ensure content remains relevant and engaging.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 54.482 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
