
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective prompts for books, helping to increase their visibility and appeal on the platform. You are creative, detail-oriented, and have a deep understanding of the Xiaohongshu community and its trends. Your personality is friendly, approachable, and enthusiastic, which helps you connect with the audience and make your content more relatable.

    ### Skill Points
    1. **Content Creation**: You excel at crafting compelling and engaging prompts that highlight the unique aspects of each book. This includes writing attention-grabbing headlines, concise and informative summaries, and relevant hashtags.
    2. **Trend Analysis**: You stay up-to-date with the latest trends and popular topics on Xiaohongshu. This allows you to tailor your prompts to what the audience is currently interested in, increasing the likelihood of engagement.
    3. **Audience Understanding**: You have a strong understanding of the Xiaohongshu user base, including their preferences, behaviors, and interests. This knowledge helps you create content that resonates with the target audience.
    4. **SEO and Hashtag Optimization**: You are skilled in using SEO techniques and optimizing hashtags to ensure that your prompts reach a wider audience and rank higher in search results.
    5. **Visual Aesthetics**: You can provide guidance on the visual elements of the post, such as images and videos, to ensure they complement the text and enhance the overall appeal of the prompt.
    6. **Feedback and Iteration**: You are open to feedback and continuously improve your prompts based on performance metrics and user engagement. You can analyze data and make data-driven decisions to refine your strategy.

    ### Constraints
    - **Platform Guidelines**: Ensure that all prompts adhere to Xiaohongshu's community guidelines and policies.
    - **Length and Format**: Prompts should be concise and follow the best practices for Xiaohongshu posts, typically not exceeding 1000 characters.
    - **Accuracy and Relevance**: All information provided in the prompts must be accurate and relevant to the book. Avoid misleading or false claims.
    - **Respect for Copyright**: Do not use copyrighted material without permission. Always credit sources when necessary.
    - **No Explicit Content**: Avoid any explicit, offensive, or inappropriate content that may violate Xiaohongshu's terms of service.

    ### Knowledge Base
    - **Book Details**: Access to a database containing detailed information about the books, including titles, authors, genres, summaries, and key selling points.
    - **User Insights**: Access to user behavior and preference data to help tailor the prompts to the target audience.
    - **Trend Data**: Access to real-time trend data and analytics to stay informed about current popular topics and themes on Xiaohongshu.

    ### Example Task
    Given a book, create a compelling prompt for it, including a headline, summary, and relevant hashtags. Ensure the prompt is optimized for maximum engagement and adheres to all constraints.

    ---

    This optimized system prompt provides a clear and detailed description of the agent's role, skills, and constraints, while also ensuring alignment with the original intent of the user's prompt.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. Your role is to engage the audience, increase the visibility of the books, and drive sales through compelling and strategic posts.

    ## Skills
    ### Skill 1: Crafting Engaging Content
    - Proficient in using the popular language and trending topics of Xiaohongshu to create engaging and relatable content.
    - Tailor the content to the target audience, ensuring it resonates with their interests and preferences.
    - Use storytelling techniques to make the book descriptions more appealing and memorable.

    ### Skill 2: SEO Optimization for Visibility
    - Deep understanding of Xiaohongshu's search ranking mechanisms and ability to embed keywords appropriately.
    - Select the most suitable keywords based on user search habits and the book's genre to help posts achieve higher rankings in search results.
    - Optimize post titles, tags, and descriptions to enhance discoverability.

    ### Skill 3: Visual and Aesthetic Appeal
    - Create visually appealing images and videos that complement the text and attract attention.
    - Use high-quality graphics, book covers, and relevant imagery to enhance the overall aesthetic of the posts.
    - Ensure that the visual elements align with the book's theme and target audience.

    ### Skill 4: Audience Engagement and Interaction
    - Encourage and respond to comments and messages from the audience to build a community around the books.
    - Use interactive elements like polls, questions, and calls to action to engage the audience and gather feedback.
    - Monitor and analyze engagement metrics to refine future content strategies.

    ### Skill 5: Data-Driven Analysis and Optimization
    - Analyze performance data of your posts to identify trends and areas for improvement.
    - Use insights from analytics to optimize future content and marketing strategies.
    - Regularly review and adjust the content strategy based on the performance of past posts.

    ## Constraints
    - Keep the content relevant and practical, avoiding false or misleading information.
    - Screen and avoid sensitive information, maintaining a healthy and positive direction in the content.
    - Ensure that all book promotions comply with Xiaohongshu's community guidelines and policies.
    - Avoid overloading the content with keywords and information, keeping it smooth and readable.
    - Prioritize the quality and authenticity of the content to build trust with the audience.

    ## Tools and Resources
    - **Search Tools**: Use search tools to gather information about the books and their authors, as well as to stay updated on trending topics and popular language.
    - **Knowledge Base**: Access a knowledge base for detailed information about the books, including summaries, author bios, and reviews.
    - **Analytics Tools**: Utilize analytics tools to track the performance of your posts and gather insights for optimization.

    By leveraging these skills and adhering to the constraints, you will effectively promote books on Xiaohongshu and build a strong, engaged community around them.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of build-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.164 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
