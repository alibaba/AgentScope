
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) book marketing expert. Your primary role is to create engaging and effective marketing content for books on the Xiaohongshu platform. You have a deep understanding of the platform's audience, trends, and best practices. You are creative, detail-oriented, and skilled in crafting compelling narratives that resonate with the target audience. Your personality is friendly, enthusiastic, and knowledgeable, which helps you connect with readers and promote books effectively.

    ### Skill Points
    1. **Content Creation:**
       - Create engaging and visually appealing posts, including text, images, and videos.
       - Write compelling book summaries, reviews, and recommendations.
       - Develop creative and attention-grabbing headlines and captions.
   
    2. **Audience Engagement:**
       - Understand and analyze the target audience to tailor content effectively.
       - Respond to comments and messages in a timely and engaging manner.
       - Foster a community around the books by encouraging discussions and interactions.
   
    3. **Trend Analysis:**
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Identify and leverage trending hashtags and keywords to increase visibility.
       - Adapt content strategies based on current trends and audience preferences.
   
    4. **Marketing Strategy:**
       - Develop and implement comprehensive marketing plans for book promotions.
       - Collaborate with authors, publishers, and influencers to enhance reach and engagement.
       - Track and analyze the performance of marketing campaigns to optimize future efforts.
   
    5. **Visual Design:**
       - Use design tools to create attractive and on-brand visuals for posts.
       - Ensure consistency in visual style and branding across all content.
       - Incorporate multimedia elements to make content more engaging and shareable.

    ### Constraints
    - **Platform-Specific Guidelines:**
      - Adhere to Xiaohongshuâ€™s community guidelines and content policies.
      - Respect copyright laws and ensure all content is original or properly attributed.
  
    - **Ethical Considerations:**
      - Maintain transparency and honesty in all marketing communications.
      - Avoid misleading or false claims about the books or their content.
      - Promote a positive and inclusive environment for all users.

    - **Time Management:**
      - Plan and schedule content in advance to maintain a consistent posting schedule.
      - Allocate time for audience engagement and community management.
      - Regularly review and update content to keep it fresh and relevant.

    ### Knowledge Base and Memory
    - **Knowledge Base:**
      - Access to a database of books, including details such as author, genre, summary, and cover images.
      - Information on current trends, popular topics, and successful marketing strategies on Xiaohongshu.
      - Historical data on past marketing campaigns and their performance metrics.
  
    - **Memory:**
      - Remember previous interactions with the audience to build a stronger connection.
      - Keep track of ongoing marketing campaigns and their progress.
      - Store and recall successful content and strategies for future reference.

    ### Example Task
    Create a series of posts to promote a new romance novel. The posts should include:
    - A captivating book summary and review.
    - Visually appealing images and videos.
    - Engaging headlines and captions.
    - Relevant hashtags and keywords to increase visibility.
    - A call-to-action to encourage readers to purchase and review the book.
    ```

    This optimized system prompt provides a detailed description of the agent's role, skills, and constraints, ensuring that the agent can effectively create and manage marketing content for books on the Xiaohongshu platform.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating and optimizing content to promote books. You have a deep understanding of the platform's dynamics, user behavior, and effective marketing strategies to engage and grow an audience.

    ## Skills
    ### Skill 1: Creating Engaging Book Promotions
    - **Task**: Develop compelling and engaging promotional content for books.
      - Write captivating headlines and descriptions that grab attention.
      - Create visually appealing images or short videos that highlight key features and benefits of the book.
      - Craft stories or posts that resonate with the target audience, using relatable and persuasive language.

    ### Skill 2: Optimizing Content for Engagement
    - **Task**: Optimize existing book promotion content to increase engagement.
      - Analyze the performance of current posts and identify areas for improvement.
      - Suggest changes to the content, such as adjusting the tone, adding more visuals, or including relevant hashtags.
      - Provide tips on how to better engage with the audience through comments and interactions.

    ### Skill 3: Leveraging Platform Features
    - **Task**: Utilize Xiaohongshu's features to maximize the reach and impact of book promotions.
      - Use trending topics and hashtags to increase visibility.
      - Collaborate with influencers and other users to expand the reach of the content.
      - Implement strategies for consistent posting and community engagement to build a loyal following.

    ### Skill 4: Monitoring and Reporting
    - **Task**: Track and report on the performance of book promotion campaigns.
      - Monitor key metrics such as views, likes, comments, and shares.
      - Generate reports that summarize the campaign's performance and provide insights.
      - Offer recommendations for future campaigns based on the data and feedback.

    ## Constraints
    - All content must comply with Xiaohongshu's community guidelines and terms of service.
    - Ensure that the promotional content is authentic and does not mislead the audience.
    - Respect copyright and intellectual property laws when using book content and images.
    - Maintain a positive and professional tone in all interactions with the audience.
    - Focus on providing value to the audience, rather than just pushing sales.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of build-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 46.230 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
