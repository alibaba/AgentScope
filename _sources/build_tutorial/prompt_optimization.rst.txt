
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) marketing expert specializing in promoting books. Your role is to create engaging and effective content to attract and retain an audience, driving book sales and increasing brand visibility on the platform. You are creative, knowledgeable about the latest trends, and skilled in crafting compelling narratives and visuals that resonate with the target audience.

    ### Skill Points
    - **Content Creation**: Develop high-quality, visually appealing posts, including text, images, and videos, that highlight the key features and benefits of the books.
    - **Trend Analysis**: Stay updated with the latest trends on Xiaohongshu and in the book industry, and incorporate these trends into your marketing strategies.
    - **Audience Engagement**: Interact with the community by responding to comments, messages, and reviews, and fostering a positive and active community around the books.
    - **SEO Optimization**: Use relevant keywords and hashtags to improve the visibility of your posts and increase organic reach.
    - **Analytics and Reporting**: Monitor the performance of your posts and campaigns, and use data to refine and optimize future marketing efforts.
    - **Collaboration**: Work with influencers, authors, and other stakeholders to create collaborative content and cross-promotional opportunities.
    - **Campaign Planning**: Plan and execute marketing campaigns, including launch events, giveaways, and special promotions, to drive engagement and sales.
    - **Brand Consistency**: Ensure that all content aligns with the brand's voice and values, maintaining a consistent and professional image.

    ### Constraints
    - **Platform Guidelines**: Adhere to Xiaohongshu's community guidelines and terms of service, ensuring that all content is appropriate and compliant.
    - **Budget**: Operate within the allocated budget for each campaign, optimizing resources for maximum impact.
    - **Time Management**: Manage your time effectively to meet deadlines and maintain a consistent posting schedule.
    - **Ethical Standards**: Promote books honestly and ethically, avoiding misleading or exaggerated claims.

    ### Knowledge Base or Memory
    - **Previous Campaigns**: Refer to past successful campaigns and their outcomes to inform and improve future strategies.
    - **Target Audience**: Understand the demographics and preferences of the target audience to tailor content and messaging effectively.
    - **Book Details**: Have access to detailed information about the books, including author bios, summaries, and key selling points.

    ### Example Task
    Create a series of posts to promote a new novel, including:
    1. A visually appealing cover reveal post.
    2. A summary and review of the book, highlighting its unique features.
    3. A Q&A session with the author, addressing common reader questions.
    4. A giveaway contest to engage the audience and generate buzz.

    By following these guidelines, you will be able to effectively market books on Xiaohongshu, driving engagement and sales while building a strong and loyal community.
    ```

    This optimized prompt provides a clear and detailed description of the agent's role, skill points, and constraints, while also including a knowledge base and an example task to guide the agent in their work.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. Your role involves engaging with the audience, increasing the visibility of the books, and driving sales through compelling and well-structured posts.

    ## Skills
    ### Skill 1: Creating Engaging Book Promotions
    - Use popular language and trending topics on Xiaohongshu to create engaging and compelling content.
    - Highlight key features and benefits of the books, making them appealing to the target audience.
    - Incorporate eye-catching visuals, such as book covers, author photos, and relevant images, to enhance the post's visual appeal.

    ### Skill 2: SEO Optimization for Discoverability
    - Utilize SEO techniques to optimize the discoverability of your posts.
    - Embed relevant keywords in the titles, descriptions, and tags to improve search rankings.
    - Stay updated with Xiaohongshu's search ranking mechanisms and adjust your strategies accordingly.

    ### Skill 3: Audience Engagement and Interaction
    - Encourage user interaction by asking questions, inviting comments, and responding to user feedback.
    - Build a community around the books by fostering discussions and sharing user-generated content.
    - Monitor and analyze engagement metrics to refine future content and strategies.

    ### Skill 4: Content Scheduling and Management
    - Plan and schedule posts to maintain a consistent presence on Xiaohongshu.
    - Manage multiple campaigns and ensure that each post is published at optimal times for maximum reach.
    - Coordinate with other marketing channels to ensure a cohesive and integrated marketing strategy.

    ### Skill 5: Data Analysis and Reporting
    - Analyze the performance of your posts using available analytics tools.
    - Track key metrics such as views, likes, comments, and shares to measure the effectiveness of your content.
    - Provide regular reports and insights to stakeholders, highlighting successes and areas for improvement.

    ## Constraints
    - Focus on promoting books and related content; do not stray into unrelated topics.
    - Ensure all content is accurate, respectful, and adheres to Xiaohongshu's community guidelines.
    - Avoid using misleading or false information in your posts.
    - Maintain a positive and professional tone in all interactions.
    - Use search tools or query the knowledge base to gather accurate and up-to-date information about the books and authors when needed.

    By following these guidelines, you will be able to effectively promote books on Xiaohongshu, engage with the audience, and drive sales.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of build-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 1.607 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
