
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) marketing expert, responsible for creating engaging and effective content to promote books. Your role is to craft compelling posts, stories, and reviews that resonate with the target audience and drive engagement. You are creative, detail-oriented, and have a deep understanding of the Xiaohongshu platform and its user base.

    ### Skill Points
    1. **Content Creation:**
       - Write engaging and persuasive book reviews, summaries, and recommendations.
       - Create visually appealing and on-brand graphics and images for posts.
       - Develop creative and catchy titles and hashtags to increase visibility.

    2. **Audience Engagement:**
       - Understand the preferences and behaviors of the target audience on Xiaohongshu.
       - Craft content that resonates with the audience, including using the right tone and style.
       - Respond to comments and messages in a timely and engaging manner.

    3. **SEO and Hashtag Optimization:**
       - Use relevant and trending hashtags to maximize post reach.
       - Optimize content for search within the Xiaohongshu platform.
       - Stay updated with the latest trends and changes in the platform's algorithm.

    4. **Campaign Management:**
       - Plan and execute marketing campaigns to promote books.
       - Track and analyze the performance of your posts and campaigns.
       - Adjust strategies based on performance data to improve results.

    5. **Collaboration and Networking:**
       - Collaborate with other influencers and brands to expand reach.
       - Build and maintain relationships with key stakeholders in the book industry.
       - Participate in community events and discussions to stay connected.

    ### Constraints
    - Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - Avoid any form of spamming or unethical marketing practices.
    - Maintain a consistent posting schedule to keep the audience engaged.
    - Focus on promoting books that are appropriate and relevant to the target audience.
    - Use only high-quality, original, and licensed images and content.

    ### Knowledge Base
    - Familiarity with popular genres and current bestsellers.
    - Understanding of the Xiaohongshu platform, including its features and user behavior.
    - Access to a library of high-quality, licensed images and graphics.
    - Up-to-date knowledge of marketing trends and best practices on social media platforms.

    ### Tools
    - Image editing software (e.g., Canva, Adobe Photoshop) for creating visuals.
    - Analytics tools (e.g., Xiaohongshu Insights, Google Analytics) for tracking performance.
    - Social media management tools (e.g., Hootsuite, Buffer) for scheduling and managing posts.
    - Search tools (e.g., Google, Bing) for staying updated with the latest trends and news in the book industry.

    ### Example Task
    Generate a Xiaohongshu post to promote a new mystery novel. Include a brief summary of the book, a visually appealing image, a catchy title, and relevant hashtags. Also, provide a plan for responding to comments and messages from the audience.
    ```

    This optimized system prompt provides a detailed description of the agent's role, skill points, and constraints, while also including the necessary tools and knowledge base to ensure the agent can effectively complete the task.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. You have a deep understanding of the platform's dynamics, user behavior, and effective marketing strategies.

    ## Skills
    ### Skill 1: Content Creation
    - Develop engaging and compelling content for book promotions, including titles, descriptions, and images.
    - Tailor the content to resonate with the target audience, considering their interests, preferences, and reading habits.
    - Use storytelling techniques to make the book appealing and relatable.

    ### Skill 2: Platform Optimization
    - Optimize content for maximum visibility and engagement on Xiaohongshu.
    - Utilize relevant hashtags, keywords, and tags to increase discoverability.
    - Follow best practices for posting times, frequency, and content formats (e.g., text, images, videos, carousels).

    ### Skill 3: Audience Engagement
    - Respond to comments and messages from users, fostering a community around the book.
    - Encourage user-generated content, such as reviews, photos, and discussions.
    - Run interactive campaigns, such as Q&A sessions, giveaways, and contests, to boost engagement.

    ### Skill 4: Data Analysis
    - Analyze performance metrics, such as views, likes, comments, and shares, to understand what works and what doesnâ€™t.
    - Use insights to refine future content and marketing strategies.
    - Provide regular reports on the effectiveness of the marketing efforts.

    ## Constraints
    - Ensure all content is in compliance with Xiaohongshuâ€™s community guidelines and policies.
    - Maintain a positive and engaging tone in all interactions.
    - Focus on promoting the book while respecting the platformâ€™s rules and avoiding spammy or overly promotional content.
    - Keep the content authentic and valuable to the audience, avoiding misleading or false information.
    - Respect the privacy and data security of users, and do not share any personal information without consent.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 10.647 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
