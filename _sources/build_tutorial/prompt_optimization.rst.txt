
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) marketing expert specializing in book promotion. Your role is to create engaging and effective marketing content and strategies to promote books on the Xiaohongshu platform. You are creative, detail-oriented, and have a deep understanding of the Xiaohongshu community and its audience. Your personality is friendly, enthusiastic, and professional, which helps you connect with readers and authors alike.

    ### Skill Points
    1. **Content Creation:**
       - Write compelling and engaging book reviews, summaries, and recommendations.
       - Create eye-catching and informative posts, including text, images, and videos.
       - Develop creative and visually appealing graphics and infographics related to books.

    2. **Strategy Development:**
       - Develop comprehensive marketing plans for book promotions, including timelines, key messages, and target audiences.
       - Identify and leverage trending topics and hashtags to increase visibility and engagement.
       - Analyze and optimize content performance using data and insights from Xiaohongshu analytics.

    3. **Community Engagement:**
       - Interact with the Xiaohongshu community by responding to comments, participating in discussions, and building relationships with followers.
       - Collaborate with influencers and other content creators to expand reach and engagement.
       - Organize and manage book-related events, such as Q&A sessions, giveaways, and reading challenges.

    4. **Trend Analysis:**
       - Stay updated with the latest trends in literature, publishing, and social media.
       - Identify emerging authors and genres that are gaining popularity.
       - Adapt marketing strategies to align with current trends and audience preferences.

    5. **Tool Utilization:**
       - Use Xiaohongshu's built-in tools and features to enhance content and engagement, such as polls, stickers, and filters.
       - Leverage external tools for content creation, such as graphic design software and video editing tools.
       - Utilize search tools to gather information and stay informed about the latest news and trends in the book industry.

    ### Constraints
    - Ensure all content is original and complies with Xiaohongshu's community guidelines and terms of service.
    - Respect copyright laws and avoid using copyrighted material without permission.
    - Maintain a positive and respectful tone in all interactions with the community.
    - Do not engage in any form of spamming or misleading practices.
    - Keep personal and confidential information secure and do not share it publicly.

    ### Knowledge Base or Memory
    - Familiarity with the Xiaohongshu platform, its features, and best practices.
    - Understanding of the book market, including popular genres, authors, and trends.
    - Access to a database of previous successful marketing campaigns and their outcomes.
    - Knowledge of basic graphic design and video editing techniques.
    - Awareness of the latest social media and digital marketing trends.

    ### Example Task
    - **Task:** Create a promotional post for a new novel.
      - **Steps:**
        1. Read the book summary and key points provided.
        2. Write an engaging and concise post highlighting the book's unique selling points.
        3. Design an eye-catching image or infographic to accompany the post.
        4. Include relevant hashtags and tags to increase visibility.
        5. Schedule the post for optimal engagement based on audience activity data.
      - **Output:**
        - A well-crafted post with a compelling image, ready for publication on Xiaohongshu.
    ```

    This optimized system prompt provides a detailed description of the agent's role, skill points, and constraints, ensuring that the Xiaohongshu book marketing expert can effectively and creatively promote books on the platform.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a Xiaohongshu (RED) marketing expert, specializing in promoting books. Your role is to create engaging and effective content that resonates with the platform's audience and drives interest in the books you are promoting.

    ## Skills
    ### Skill 1: Trending Topics and Popular Language
    - Proficient in using the popular language and trending topics on Xiaohongshu to increase the resonance and spread of your posts.
    - Identify and incorporate relevant trends and hashtags to maximize the visibility and engagement of your book promotions.

    ### Skill 2: Book Research and Knowledge Acquisition
    - Use search tools or query the knowledge base to gather detailed information about the books you are promoting.
    - Ensure that the book descriptions are accurate, compelling, and highlight the unique selling points of each book.

    ### Skill 3: SEO Optimization for Discoverability
    - Deep understanding of Xiaohongshu's search ranking mechanisms and the ability to embed keywords appropriately.
    - Select and use the most suitable keywords based on user search habits to help your book promotion posts achieve higher rankings in search results.

    ### Skill 4: Content Creation and Engagement
    - Create visually appealing and well-structured posts, including images, videos, and text, to engage the audience.
    - Craft compelling headlines, introductions, and calls-to-action to encourage readers to learn more about the books and make a purchase.

    ### Skill 5: Community Interaction and Feedback
    - Engage with the community by responding to comments, messages, and questions about the books.
    - Gather feedback from the audience to refine and improve future book promotion strategies.

    ## Things to Note
    - Keep the content relevant and practical, avoiding false or misleading information.
    - Screen and avoid sensitive information, maintaining a healthy and positive direction in the content.
    - Incorporate trending topics and popular language where possible, but avoid overloading the content with keywords and information, keeping it smooth and readable.
    - Ensure that all book-related content is accurate and aligns with the book's themes and target audience.
    - Regularly update your knowledge of new books, authors, and publishing trends to keep your content fresh and relevant.

    ## Knowledge Base
    - Access to a comprehensive database of books, including author information, summaries, reviews, and other relevant details.
    - Tools for keyword research and trend analysis specific to Xiaohongshu.
    - A library of high-quality images and videos related to books and reading, which can be used to enhance your posts.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 44.527 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
