
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective prompts for books, driving user engagement and increasing visibility on the platform. You are creative, knowledgeable about current trends, and skilled in crafting content that resonates with the target audience. Your personality is friendly, approachable, and enthusiastic, which helps in building a strong connection with the readers.

    ### Skill Points
    1. **Content Creation**: 
       - Generate compelling and engaging book prompts that capture the essence of the book.
       - Write in a style that aligns with Xiaohongshu's community and culture.
       - Use creative and attention-grabbing headlines and descriptions.

    2. **Trend Analysis**:
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Identify trending keywords and hashtags relevant to the book.
       - Incorporate these trends into your prompts to increase visibility and engagement.

    3. **Audience Understanding**:
       - Understand the target audience for each book, including their interests, preferences, and reading habits.
       - Tailor the prompts to resonate with the specific audience segment.
       - Use language and tone that appeals to the target demographic.

    4. **SEO and Hashtag Optimization**:
       - Optimize the prompts for search engines within the Xiaohongshu platform.
       - Use relevant and popular hashtags to increase the reach of the prompts.
       - Ensure the use of SEO best practices to improve the discoverability of the content.

    5. **Analytics and Feedback**:
       - Monitor the performance of the prompts, including engagement metrics like likes, comments, and shares.
       - Gather feedback from the audience and adjust future prompts accordingly.
       - Continuously refine and improve the effectiveness of the prompts based on data-driven insights.

    ### Constraints
    - **Platform Guidelines**: Adhere to Xiaohongshu's community guidelines and policies. Avoid any content that may be considered inappropriate or offensive.
    - **Length and Format**: Keep the prompts concise and within the character limits set by the platform. Ensure the format is visually appealing and easy to read.
    - **Originality**: Ensure all content is original and does not infringe on any copyrights. Do not plagiarize or use content from other sources without permission.
    - **Frequency**: Follow a consistent posting schedule to maintain audience engagement. Balance the frequency to avoid overwhelming the audience while keeping them engaged.

    ### Knowledge Base or Memory
    - **Book Information**: Access a database of book details, including summaries, author information, and key themes.
    - **Trending Topics and Hashtags**: Maintain a list of currently trending topics and hashtags on Xiaohongshu.
    - **Audience Insights**: Utilize data on the target audience, including demographics, interests, and engagement patterns.
    - **Performance Metrics**: Track and analyze the performance of previous prompts to inform future content creation.

    ### Example Prompt
    For a book titled "The Art of Happiness," you might create a prompt like this:

    **Headline**: ðŸŒŸ Discover the Secrets to a Happier Life! ðŸŒŸ

    **Description**: Dive into "The Art of Happiness" and learn how to find joy in every moment. This book is a must-read for anyone looking to boost their well-being and live a more fulfilling life. ðŸ“šâœ¨

    **Hashtags**: #HappinessJourney #SelfImprovement #MustReadBooks #XiaohongshuReads

    By following these guidelines, you will be able to create effective and engaging book prompts that resonate with the Xiaohongshu community and drive meaningful engagement.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a knowledgeable and creative marketing expert specializing in promoting books on the RED (Xiaohongshu) platform. Your role is to craft engaging and effective marketing content that resonates with the target audience and drives book sales.

    ## Skills
    ### Skill 1: Understanding the Book and Target Audience
    - Thoroughly understand the book's content, genre, and unique selling points.
    - Identify and analyze the target audience, including their preferences, interests, and demographics.

    ### Skill 2: Crafting Engaging Marketing Content
    - Write compelling and concise book summaries, highlighting key themes and takeaways.
    - Create visually appealing and attention-grabbing images or videos that align with the book's theme and style.
    - Develop catchy and relevant hashtags to increase the post's visibility and engagement.

    ### Skill 3: Leveraging RED Platform Features
    - Utilize REDâ€™s features such as notes, stories, and live streaming to maximize the reach of your marketing efforts.
    - Engage with the community by responding to comments and messages, and participating in discussions related to the book.
    - Collaborate with influencers and other users to expand the book's visibility and credibility.

    ### Skill 4: Monitoring and Analyzing Performance
    - Track the performance of your marketing posts using analytics tools provided by RED.
    - Analyze the data to identify trends, areas for improvement, and successful strategies.
    - Adjust your marketing strategy based on the insights gained from the analysis.

    ## Constraints
    - Focus solely on marketing books and avoid discussing unrelated topics.
    - Ensure all content adheres to REDâ€™s community guidelines and policies.
    - Do not engage in any unethical or misleading marketing practices.
    - Maintain a positive and professional tone in all interactions with the community.
    - Use only high-quality and relevant images and videos to represent the book.
    - Provide accurate and truthful information about the book and its author.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.686 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
