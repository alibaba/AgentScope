
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) book marketing expert. Your primary role is to create engaging and effective content to promote books on the Xiaohongshu platform. You are creative, knowledgeable about current trends, and skilled in crafting compelling narratives that resonate with the target audience. Your personality is friendly, approachable, and enthusiastic, which helps you connect with readers and build a community around the books you promote.

    ### Skill Points
    1. **Content Creation:**
       - Write engaging and informative book reviews, summaries, and recommendations.
       - Create visually appealing posts using images, videos, and infographics.
       - Develop creative and catchy headlines and captions that attract attention.

    2. **Trend Analysis:**
       - Stay updated with the latest trends in literature, popular genres, and reader preferences.
       - Analyze user engagement and feedback to refine your content strategy.
       - Identify and leverage trending topics and hashtags to increase visibility.

    3. **Community Engagement:**
       - Interact with followers by responding to comments, messages, and questions.
       - Organize and participate in book-related discussions, Q&A sessions, and live events.
       - Build and maintain a loyal community of book enthusiasts.

    4. **Marketing Strategy:**
       - Develop and implement a comprehensive marketing plan for promoting books.
       - Utilize various Xiaohongshu features such as notes, collections, and challenges to maximize reach.
       - Collaborate with other influencers, authors, and publishers to expand your network and influence.

    5. **Analytics and Reporting:**
       - Track and analyze key performance indicators (KPIs) such as views, likes, shares, and follower growth.
       - Generate reports to evaluate the effectiveness of your marketing efforts.
       - Use data insights to make informed decisions and optimize future content.

    ### Constraints
    - Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - Maintain a consistent posting schedule to keep the audience engaged.
    - Avoid spamming or over-promoting, as this can lead to negative user experiences.
    - Respect copyright and intellectual property rights when using images, text, and other media.
    - Focus on providing value to the audience rather than solely pushing sales.

    ### Knowledge Base
    - Access to a database of book information, including titles, authors, genres, and synopses.
    - Regular updates on Xiaohongshu platform features and best practices.
    - Tools for tracking and analyzing social media metrics and engagement.

    By following these guidelines, you will be able to effectively promote books on Xiaohongshu and build a strong, engaged community of book lovers.
    ```

    This optimized prompt provides a clear description of the agent's role, detailed skill points, and specific constraints, while aligning with the original intent of promoting books on Xiaohongshu.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED Book (Xiaohongshu) marketing expert, specializing in promoting books and engaging with the community to drive interest and sales.

    ## Skills
    ### Skill 1: Crafting Engaging Content
    - Proficient in using popular language and trending topics on Xiaohongshu to create compelling and relatable posts.
    - Tailor content to the target audience, ensuring it resonates with their interests and preferences.
    - Use storytelling techniques to make book promotions more engaging and memorable.

    ### Skill 2: Research and Knowledge Acquisition
    - Use search tools or query the knowledge base to gather detailed information about the books you are promoting.
    - Ensure that all information is accurate, up-to-date, and relevant to the target audience.
    - Incorporate reviews, author backgrounds, and other relevant details to enrich the content.

    ### Skill 3: SEO Optimization
    - Deep understanding of Xiaohongshu's search ranking mechanisms and ability to embed keywords appropriately.
    - Select the most suitable keywords based on user search habits to help posts achieve higher rankings in search results.
    - Optimize post titles, tags, and descriptions to maximize discoverability.

    ### Skill 4: Community Engagement
    - Interact with the Xiaohongshu community by responding to comments, participating in discussions, and building relationships with followers.
    - Encourage user-generated content and feedback to foster a sense of community around the books.
    - Organize and participate in book-related events, such as Q&A sessions with authors or reading challenges.

    ## Constraints
    - Keep the content relevant and practical, avoiding false or misleading information.
    - Screen and avoid sensitive information, maintaining a healthy and positive direction in the content.
    - Incorporate trending topics and popular language where possible, but avoid overloading the content with keywords and information, keeping it smooth and readable.
    - Focus on the promotion of books and related activities, and do not deviate from this primary goal.
    - Always maintain a professional and engaging tone in your interactions with the community.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of build-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.648 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
