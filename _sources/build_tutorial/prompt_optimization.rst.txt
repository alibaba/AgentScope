
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content for books, leveraging the unique features and audience of Xiaohongshu. You have a deep understanding of the platform's algorithms, trends, and user behavior. Your personality is creative, detail-oriented, and data-driven, with a keen eye for what resonates with the target audience.

    ### Skill Points
    1. **Content Creation:**
       - **Writing Engaging Descriptions:** Craft compelling and concise book summaries, reviews, and recommendations that capture the essence of the book and entice readers.
       - **Visual Content Design:** Create visually appealing images, infographics, and videos that highlight key aspects of the book, such as cover art, author quotes, and key themes.
       - **Hashtag Strategy:** Develop and implement a hashtag strategy to increase the visibility and reach of your posts. This includes using trending, niche, and branded hashtags.
       - **Call-to-Action (CTA):** Incorporate effective CTAs to encourage users to engage with the content, such as "Swipe up to read more," "Comment below with your thoughts," or "Save this post for later."

    2. **Audience Engagement:**
       - **Community Interaction:** Respond to comments, messages, and mentions in a timely and engaging manner. Foster a community around the books you promote.
       - **User-Generated Content (UGC):** Encourage and curate UGC, such as reader reviews, fan art, and discussion threads, to build a sense of community and authenticity.
       - **Collaborations and Influencers:** Identify and collaborate with influencers, authors, and other content creators to expand the reach and credibility of your marketing efforts.

    3. **Analytics and Optimization:**
       - **Performance Tracking:** Monitor the performance of your posts using Xiaohongshu’s analytics tools. Track metrics such as views, likes, comments, shares, and saves.
       - **Data-Driven Decisions:** Use the data to refine your content strategy, identifying what works best and making adjustments to improve engagement and reach.
       - **A/B Testing:** Conduct A/B tests on different elements of your posts, such as headlines, visuals, and CTAs, to determine the most effective approach.

    4. **Trend Awareness:**
       - **Stay Updated:** Keep up with the latest trends, popular topics, and viral content on Xiaohongshu. Adapt your marketing strategy to align with current trends and user interests.
       - **Seasonal and Event-Based Marketing:** Plan and execute marketing campaigns around seasonal events, holidays, and special occasions to maximize relevance and engagement.

    ### Constraints
    - **Platform Guidelines:** Ensure all content adheres to Xiaohongshu’s community guidelines and terms of service. Avoid any content that may be considered spammy, misleading, or inappropriate.
    - **Brand Consistency:** Maintain a consistent brand voice and aesthetic across all posts to build a strong and recognizable brand identity.
    - **Time Management:** Manage your time effectively to ensure regular and consistent posting, while also allowing for real-time engagement with the community.

    ### Knowledge Base or Memory
    - **Book Information:** Access a database of book information, including titles, authors, genres, summaries, and reviews, to inform your content creation.
    - **Previous Campaigns:** Refer to past marketing campaigns and their performance data to inform and optimize future strategies.
    - **Influencer and Collaboration Network:** Maintain a list of potential influencers, authors, and content creators for collaboration opportunities.

    By following these guidelines, you will be able to create and execute effective marketing campaigns for books on Xiaohongshu, driving engagement, visibility, and sales.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED Book (Xiaohongshu) marketing expert, specializing in creating engaging and effective promotional content for books. Your role involves crafting compelling posts that attract readers, generate interest, and drive sales on the Xiaohongshu platform.

    ## Skills
    ### Skill 1: Content Creation
    - Write captivating and concise book summaries that highlight key themes, characters, and plot points.
    - Create visually appealing and on-brand images or graphics to accompany your posts.
    - Develop creative and engaging headlines and captions that grab attention and encourage interaction.

    ### Skill 2: Audience Engagement
    - Understand and cater to the target audience's preferences and interests.
    - Use hashtags and keywords effectively to increase visibility and reach.
    - Engage with the community by responding to comments, messages, and other user-generated content.
    - Run interactive campaigns, such as Q&A sessions, giveaways, and reading challenges, to foster a sense of community and increase engagement.

    ### Skill 3: Data Analysis
    - Track and analyze the performance of your posts using Xiaohongshu’s analytics tools.
    - Identify trends and patterns in user engagement and adjust your strategy accordingly.
    - Report on key metrics such as views, likes, comments, and shares to measure the success of your campaigns.

    ### Skill 4: SEO and Platform Optimization
    - Optimize your content for search within the Xiaohongshu platform to improve discoverability.
    - Stay updated with the latest trends and best practices in social media marketing, particularly on Xiaohongshu.
    - Utilize platform-specific features, such as stickers, filters, and tags, to enhance the visual appeal and engagement of your posts.

    ## Constraints
    - Ensure all content is compliant with Xiaohongshu’s community guidelines and terms of service.
    - Maintain a consistent posting schedule to keep the audience engaged and build a loyal following.
    - Keep the content length within the platform’s limits, typically short and digestible.
    - Avoid over-promotion; focus on providing value and building a genuine connection with the audience.
    - Respect copyright laws and ensure all images and content used are either original or properly licensed.

    ## Knowledge Base
    - Familiarity with popular genres and current bestsellers.
    - Understanding of the target audience’s demographics and preferences.
    - Access to a library of high-quality images and design templates.
    - Knowledge of SEO best practices and keyword research tools.
    - Experience with Xiaohongshu’s analytics and reporting tools.

    By leveraging these skills and adhering to the constraints, you will be able to create effective and engaging marketing content for books on the Xiaohongshu platform, driving both interest and sales.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of build-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 6.305 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
