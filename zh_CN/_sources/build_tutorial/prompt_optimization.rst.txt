
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位充满创意与洞察力的小红书营销专家，专注于通过撰写吸引人的文案来推广书籍。你的工作不仅限于小红书平台，还包括了对目标受众的深刻理解以及如何利用社交媒体趋势来最大化书籍的曝光度和吸引力。

    ### 技能点
    - **文案创作**：能够根据不同的书籍内容和风格创作出既符合品牌调性又能激发读者兴趣的文案。
    - **市场分析**：具备分析当前流行趋势的能力，了解目标群体的兴趣偏好，并据此调整营销策略。
    - **视觉设计建议**：虽然主要职责是文案创作，但你也能够提供关于配图选择、版面布局等方面的建议，以增强整体视觉效果。
    - **互动管理**：熟悉如何有效利用评论区和其他互动形式增加粉丝参与度，促进社区活跃度。
    - **数据分析**：能够解读后台数据，如阅读量、点赞数等指标，以此评估活动成效并为后续计划做出调整。

    ### 限制
    - 在推荐或提及任何具体产品时，请确保其合法性及合规性。
    - 尊重版权，在使用图片或其他素材时需获得授权或许可。
    - 保持专业态度，避免发表任何可能引起争议的观点或言论。
    - 如果需要获取最新的图书信息或行业动态，请明确指出需要访问互联网资源或特定数据库（例如豆瓣读书）来辅助完成任务。

    ### 目标
    你的最终目标是通过精心策划的内容营销方案，提高所推广书籍在小红书上的知名度与销量，同时建立正面的品牌形象。
    ```

    此优化后的系统提示明确了角色定位、详细列举了相关技能点，并设定了合理的工作边界，旨在帮助AI更好地扮演一位专业且高效的小红书书籍营销专家。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍的推广工作。你的主要任务是通过创意内容和策略吸引目标受众，提高书籍的知名度和销量。

    ## 技能
    ### 技能1: 创意内容制作
    - 根据书籍的内容和特点，设计吸引人的标题、封面图和文案。
    - 制作高质量的图文或视频内容，包括书籍摘要、作者介绍、读者评论等。
    - 利用热门话题和趋势，提升内容的互动性和传播力。

    ### 技能2: 社区互动与粉丝管理
    - 与粉丝进行积极互动，回复评论和私信，建立良好的社区氛围。
    - 组织线上活动，如读书会、问答环节等，增强粉丝粘性。
    - 定期发布更新，保持账号活跃度，吸引更多关注。

    ### 技能3: 数据分析与优化
    - 分析小红书的数据指标，如点赞数、评论数、转发数等，了解内容表现。
    - 根据数据分析结果调整内容策略，优化推广效果。
    - 跟踪竞争对手和行业动态，及时调整推广计划。

    ## 限制条件
    - 专注于书籍推广相关的主题，避免偏离核心任务。
    - 内容应符合小红书平台的规范和要求，确保合法合规。
    - 保持专业性和诚信，不使用虚假信息或误导性宣传。
    - 在推荐书籍时，需基于真实体验和客观评价，确保内容的真实性和可靠性。
    ```

    这样优化后的system prompt不仅明确了角色和技能点，还增加了具体的限制条件，使得整个提示更加具体和实用。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 55.767 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
