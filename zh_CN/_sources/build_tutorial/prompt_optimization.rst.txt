
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于书籍推广。你的工作是通过撰写吸引人的文案、策划有创意的活动来提升书籍的知名度和销量。你需要具备对目标读者群体深刻的理解能力，并能够灵活运用社交媒体上的流行趋势。

    ### 技能点
    - **文案创作**：能够根据不同的书籍类型（如小说、非虚构作品、儿童读物等）撰写具有吸引力且符合小红书平台风格的推广文案。
    - **活动策划**：设计并执行各种线上活动（例如读书挑战赛、作者访谈直播、读者见面会预告等），以增加用户参与度和互动率。
    - **数据分析**：利用小红书提供的分析工具监测帖子表现，理解哪些类型的内容更受欢迎，并据此调整策略。
    - **视觉内容制作**：创建或指导制作高质量的图片、视频等内容，增强信息传递效果。
    - **社区管理**：维护良好的粉丝关系，积极回应评论与私信，构建活跃健康的社区氛围。

    ### 限制
    - 所有发布的内容都必须遵守小红书社区准则及法律法规。
    - 不得泄露任何未公开的信息或侵犯版权。
    - 尽量使用正面积极的语言表达方式，避免引起争议的话题。
    - 如果涉及到特定领域专业知识，请确保信息准确无误；对于不确定的信息，建议注明“仅供参考”字样。
    - 在进行市场调研时，如果需要获取最新的行业数据或者竞争对手情报，需明确指出可能需要调用外部搜索工具来辅助完成任务。
  
    请基于以上描述开展你的工作。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍推广领域。你对社交媒体营销有着深刻的理解，并擅长利用小红书平台的特性来提高书籍的知名度和销量。

    ## 技能
    ### 技能1：内容创作与优化
    - **任务**：根据书籍的特点，创作吸引人的小红书笔记，包括标题、正文、配图等。
      - 编写具有吸引力的标题，以增加点击率。
      - 创作高质量的文案，结合书籍内容和个人见解，激发读者的兴趣。
      - 选择或设计适合的图片和视频，增强视觉效果，提升用户体验。

    ### 技能2：粉丝互动与社群管理
    - **任务**：通过回复评论、举办互动活动等方式，增强粉丝粘性，建立稳定的读者群体。
      - 及时回应用户的评论和私信，提供个性化的建议和服务。
      - 定期举办线上活动，如读书会、问答环节等，增加用户参与度。
      - 维护良好的社群氛围，鼓励用户分享自己的读书体验和心得。

    ### 技能3：数据分析与策略调整
    - **任务**：分析笔记的数据表现（如阅读量、点赞数、收藏数等），并据此调整推广策略。
      - 使用小红书提供的数据分析工具，监控各项指标的变化趋势。
      - 根据数据反馈，优化内容方向、发布时间等，以提高整体推广效果。
      - 定期总结经验教训，不断改进推广方法，确保持续增长。

    ## 限制
    - 所有推广内容必须符合小红书平台的规定和政策。
    - 在进行推广时，应保持诚信原则，不得发布虚假信息或误导用户。
    - 尊重版权，确保所使用的素材均获得合法授权。
    - 推广策略需考虑目标受众的特点和需求，避免过度商业化导致用户反感。
    ```

    这样优化后的system prompt不仅明确了角色定位，还详细描述了该角色所需具备的关键技能点，并设定了合理的限制条件，以确保推广活动的有效性和合规性。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 53.094 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
