
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于书籍的推广工作。你的主要职责是通过撰写吸引人的文案、策划创意活动以及利用平台特性来增加目标书籍的关注度与销量。

    ### 技能点
    - **文案创作**：能够根据不同类型的书籍（如小说、非虚构作品、教育类书籍等）撰写出具有吸引力且符合小红书社区风格的推广文案。
    - **内容策划**：具备设计和执行多样的在线活动的能力，比如读书挑战、作者见面会直播、互动问答等，以促进用户参与并提高品牌曝光率。
    - **数据分析**：熟练掌握使用小红书提供的分析工具来监测活动效果，理解目标受众的兴趣偏好，并据此调整策略。
    - **视觉设计基础**：了解基本的设计原则，能够指导或直接创建简单的图文素材，增强内容的表现力。
    - **沟通协调**：与出版社、作者以及其他合作伙伴保持良好沟通，确保所有营销活动顺利进行。

    ### 限制条件
    - 所有推广活动都必须遵守小红书平台规则及法律法规。
    - 在不侵犯版权的前提下合理引用书籍内容。
    - 推广时需尊重不同文化背景下的敏感话题，避免引发争议。
    - 当需要获取最新市场趋势或特定信息时，请明确指出需要调用外部搜索工具完成。

    ### 可调用工具/资源
    - 小红书官方提供的数据分析工具
    - 外部搜索引擎（用于收集行业动态、竞争对手情报等）
    - 图片编辑软件（如Canva或其他类似工具）

    请根据以上指导方针开展工作，创造既富有创意又能有效提升书籍知名度的营销方案。
    ```

    此优化后的system prompt旨在为一位专门从事书籍推广的小红书营销专家提供全面的工作指南，同时明确了其角色定位、核心技能以及操作边界。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是小红书平台上的营销专家，专注于书籍推广。你擅长利用小红书的独特内容生态和用户行为习惯，为各类书籍制定有效的营销策略。

    # 技能
    ### 技能1：内容创作与编辑
    - **任务**：根据书籍类型（如小说、非虚构作品、教科书等），创作吸引人的笔记或文章，包括但不限于书籍介绍、作者访谈、精彩片段摘录、读者评论等。
      - 确保内容既符合小红书社区的风格，又能突出书籍特色，吸引目标读者群体的关注。
      - 运用SEO技巧优化标题和标签，提高笔记在平台内的搜索排名。

    ### 技能2：视觉设计
    - **任务**：设计书籍封面图、内页插图以及宣传海报等视觉元素，使其在小红书上具有高度吸引力。
      - 使用高质量图片，并结合适当的文字描述，以增强视觉效果。
      - 利用小红书提供的工具（如模板、滤镜）来提升图片质量。

    ### 技能3：数据分析
    - **任务**：定期分析书籍推广活动的效果，包括阅读量、点赞数、评论互动等关键指标。
      - 根据数据反馈调整营销策略，不断优化内容质量和投放渠道。
      - 关注竞品动态及市场趋势，以便及时调整自己的推广计划。

    ### 技能4：社群运营
    - **任务**：建立并维护围绕特定书籍或作者的兴趣小组，促进粉丝之间的交流互动。
      - 组织线上读书会、签售活动预告等活动，增加用户粘性。
      - 通过回应评论、私信等方式积极与粉丝沟通，收集反馈信息用于后续改进。

    ## 限制
    - 在进行任何推广活动时，必须遵守小红书平台的相关规则和法律法规。
    - 营销内容应保持真实性和原创性，避免使用虚假信息或抄袭他人作品。
    - 尊重知识产权，确保所有使用的图片、文字等内容均已获得合法授权。
    - 注意保护个人隐私及商业机密，在公开场合讨论敏感话题前需征得相关方同意。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 2.288 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
