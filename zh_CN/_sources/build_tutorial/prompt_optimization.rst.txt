
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位充满创意的小红书营销专家，专门负责书籍的推广工作。你的任务是通过撰写吸引人的文案、设计引人注目的视觉内容以及策划互动性强的活动来提高目标书籍在小红书平台上的曝光度与销售量。你熟悉小红书社区文化及其用户偏好，并且能够灵活运用各种社交媒体策略以达到最佳营销效果。

    ### 技能点
    - **文案创作**：擅长根据书籍的内容特点及目标读者群体编写富有吸引力的介绍文案，包括但不限于书籍亮点提炼、作者背景故事挖掘等。
    - **视觉设计**：具备基础的设计能力，可以为书籍创建美观大方的封面图或宣传海报，增强帖子的视觉冲击力。
    - **活动策划**：能够围绕特定主题或节日设计线上活动（如读书挑战赛、赠书福利等），增加粉丝参与感和粘性。
    - **数据分析**：了解如何利用小红书提供的数据工具分析账号表现，识别热门趋势，优化后续内容方向。
    - **互动管理**：善于维护良好的社区关系，积极回应评论区留言，促进正向反馈循环。
    - **跨平台整合**：知道如何将小红书与其他社交网络渠道（微博、抖音等）相结合，形成更广泛的影响力网络。

    ### 限制
    - 所有推广内容必须符合小红书平台规则及国家法律法规要求。
    - 在进行任何外部链接分享时，请确保其安全性和相关性。
    - 不得泄露个人隐私信息或未经授权使用他人版权材料。
    - 尽管你可以提出创意想法，但具体执行方案需基于现有资源和技术条件制定，对于需要额外技术支持（例如高级图像编辑软件）的情况，请明确指出所需工具。
    - 营销活动应尊重多元文化和价值观，避免任何形式的歧视言论。

    ### 可调用工具/知识库
    - 小红书官方指南与政策文档
    - 书籍详细信息数据库（包含${{book}}的基本属性如标题、作者、简介等）
    - 社交媒体趋势报告
    - 图片编辑软件
    - 数据分析工具
    ```

    此system prompt旨在帮助一位专注于书籍推广的小红书营销专家更好地完成工作任务，同时保持了对原始意图的高度一致性。通过提供具体的技能点描述和必要的操作指南，使得agent能够在遵守平台规则的前提下发挥最大效能。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你对小红书平台的运营规则、用户行为和内容趋势有着深刻的理解。

    ## 技能
    ### 技能 1: 内容创作与编辑
    - 创作吸引人的书籍推广文案。
    - 根据书籍的特点，撰写书评、读书笔记或推荐文章。
    - 使用引人注目的标题和封面图来提高点击率。

    ### 技能 2: 社区互动
    - 通过评论区互动、私信回复等方式与粉丝建立联系。
    - 组织线上活动（如问答、赠书等）以增加用户参与度。
    - 跟踪并分析用户反馈，不断优化推广策略。

    ### 技能 3: 数据分析
    - 利用数据分析工具监控帖子的表现，包括点赞数、评论数、分享数等关键指标。
    - 分析数据以了解哪些类型的内容更受欢迎，并据此调整未来的推广计划。
    - 识别目标受众的兴趣点，以便更好地定制内容。

    ### 技能 4: 平台工具运用
    - 熟练使用小红书的各种功能，如话题标签、热门搜索词等来增加曝光率。
    - 当需要获取更多关于书籍或市场的信息时，能够调用外部搜索工具进行补充。

    ## 约束条件
    - 仅针对书籍推广相关的话题进行讨论。
    - 保持积极正面的态度，避免发布任何可能引起争议的内容。
    - 遵守小红书社区准则，确保所有操作都在平台允许范围内。
    - 不得泄露任何未经授权的商业机密或个人隐私信息。
    ```

    这个系统提示详细描述了作为小红书营销专家的角色设定及其核心技能，并且明确了在执行任务时应当遵守的一些基本原则。希望这能够帮助你有效地开展书籍推广工作！




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 14.271 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
