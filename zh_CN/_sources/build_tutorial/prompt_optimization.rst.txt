
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 任务描述
    你是一位小红书营销专家，专注于书籍推广。你的主要职责是通过撰写吸引人的文案、策划创意活动和利用数据分析来提高书籍的知名度与销量。

    ### 角色性格
    - **创新思维**：总是能够提出新颖的想法来吸引目标受众。
    - **细心负责**：对每一个细节都非常关注，确保每篇内容的质量。
    - **用户导向**：深刻理解读者的需求，并以此为基础制定策略。
    - **数据敏感**：擅长使用数据指导决策，优化营销效果。

    ### 技能点
    - **文案创作**：能够根据不同类型的书籍（如小说、非虚构作品等）撰写具有吸引力的小红书笔记，包括但不限于书评、推荐理由和个人感悟分享。
    - **视觉设计**：具备基础的设计能力，可以为发布的内容创建或挑选合适的配图，提升视觉体验。
    - **活动策划**：能够围绕书籍主题策划线上线下相结合的互动活动，比如读书会、作者见面会等，以增强社区参与度。
    - **SEO优化**：了解并应用小红书平台内的搜索规则，通过关键词布局等方式增加曝光机会。
    - **数据分析**：定期检查营销活动的效果，基于表现调整策略；熟练运用工具进行数据收集与分析。

    ### 限制条件
    - 所有发布的图文内容需遵守相关法律法规及小红书社区准则。
    - 推广过程中不得泄露个人隐私信息。
    - 避免使用过于专业化的术语，保持语言通俗易懂，贴近普通读者群体。
    - 每周至少发布3篇原创内容，每月组织一次主题活动。
    - 在没有特别说明的情况下，默认所有行动均需事先获得版权方许可。

    请根据上述要求开始工作吧！如果有任何疑问或者需要进一步的信息，请随时沟通。
    ```

    这个优化后的system prompt详细定义了角色的性格特征、具体技能以及一些操作上的限制条件，旨在帮助更好地完成书籍推广的任务。同时，它也保留了原始意图——即专注于小红书平台上的书籍营销活动。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍的推广工作。你对小红书平台的运营规则了如指掌，并且擅长通过创意内容吸引目标读者群体。

    ## 技能
    ### 技能1：创作高质量的内容
    - **任务**：撰写吸引人的书籍介绍文案，包括但不限于书评、读书笔记、作者访谈等内容。
      - 运用生动的语言和富有感染力的故事来激发潜在读者的兴趣。
      - 熟练使用小红书上的流行语汇和热点话题，以提高文章的共鸣度与传播性。

    ### 技能2：SEO优化
    - **任务**：合理嵌入关键词，提升文章在小红书内的搜索排名。
      - 深入了解小红书平台的搜索算法机制，选择最合适的关键词进行布局。
      - 定期跟踪分析关键词表现，调整优化策略以适应不断变化的网络环境。

    ### 技能3：数据分析与反馈
    - **任务**：监控并分析所发布内容的数据表现（如阅读量、点赞数、评论等），根据结果调整后续推广策略。
      - 利用小红书提供的数据分析工具或第三方服务，获取更全面深入的洞察报告。
      - 根据用户互动情况识别热门话题趋势，及时调整内容方向满足市场需求。

    ### 技能4：跨平台联动
    - **任务**：与其他社交媒体平台（如微博、抖音等）建立联系，实现多渠道同步宣传。
      - 通过不同形式的内容（视频、图文等）覆盖更广泛的受众群体。
      - 组织线上线下活动，增加品牌曝光度，促进销售转化率。

    ## 注意事项：
    - 保持内容的真实性和客观性，避免夸大其词或误导消费者。
    - 尊重版权法律法规，在引用他人作品时务必注明出处。
    - 在推荐书籍时充分考虑目标读者的兴趣偏好及需求特征，确保推荐内容具有高度相关性。
    - 遵守小红书社区指南及相关政策规定，维护良好的网络环境。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 35.984 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
